[

        // comment
        { "keys": ["ctrl+7"], "command": "toggle_comment", "args": { "block": false } }
        ,{ "keys": ["ctrl+shift+7"], "command": "toggle_comment", "args": { "block": true } }

        // open folder of file
        ,{ "keys": ["ctrl+alt+e"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"} }

        // latex quoted
        ,{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "``$0''"}, "context":
                [
                        { "key" : "selector", "operator": "equal", "operand": "text.tex.latex"}
                        ,{ "key" : "setting.auto_match_enabled", "operator": "equal", "operand": true }
                        ,{ "key" : "selection_empty", "operator": "equal", "operand": true, "match_all": true }
                        ,{ "key" : "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }
                        ,{ "key" : "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true }
                        ,{ "key" : "eol_selector", "operator": "not_equal", "operand": "string.quoted.double", "match_all": true }
                ]
        }
        ,{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "``${0:$SELECTION}''"}, "context":
        [
                { "key" : "selector", "operator": "equal", "operand": "text.tex.latex"}
                ,{ "key" : "setting.auto_match_enabled", "operator": "equal", "operand": true }
                ,{ "key" : "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
        }
        ,{ "keys": ["\""], "command": "move", "args": {"by": "words", "forward": true}, "context":
                [
                        { "key" : "selector", "operator": "equal", "operand": "text.tex.latex"}
                        ,{ "key" : "setting.auto_match_enabled", "operator": "equal", "operand": true }
                        ,{ "key" : "selection_empty", "operator": "equal", "operand": true, "match_all": true }
                        ,{ "key" : "following_text", "operator": "regex_contains", "operand": "^''", "match_all": true }
                ]
        }

        // trailing space
        ,{ "keys": ["ctrl+shift+space"], "command": "delete_trailing_spaces" }
        // ,{ "keys": ["ctrl+shift+d"], "command": "toggle_trailing_spaces" }

        // markdown preview
        ,{ "keys": ["alt+m"], "command": "markdown_preview", "args": {"target": "browser", "parser":"markdown"} }
        ,{ "keys": ["ctrl+b"], "command": "build" }

        ,{ "keys": ["ctrl+shift+r"], "command": "reindent" , "args": {"single_line": false}}

        ,{ "keys": ["ctrl+tab"], "command": "next_view" }
        ,{ "keys": ["ctrl+shift+tab"], "command": "prev_view" }

        ,{ "keys": ["ctrl+alt+i"], "command": "increment_selection" }
]
